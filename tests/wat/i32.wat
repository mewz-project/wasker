(module
  ;; Import our myprint function
  (import "myenv" "print" (func $print (param i64 i32)))

  ;; Define a single page memory of 64KB.
  (memory $0 1)

  ;; Store the Hello World (null terminated) string at byte offset 0
  (data (i32.const 0) "Test Passed\n")
  (data (i32.const 16) "# Test Failed\n")

  ;; Debug function
  (func $printd (param $len i32)
    i64.const 0
    (local.get $len)
    (call $print)
  )
  
  (func $printSuccess
    i64.const 0
    i32.const 12
    (call $print)
  )

  (func $printFail
    i64.const 16
    i32.const 14
    (call $print)
  )

  (func $assert_test_i32 (param $expected i32) (param $result i32)
    local.get $expected
    local.get $result
    i32.eq
    (if
      (then
        (call $printSuccess)
      )
      (else
        (call $printFail)
      )
    )
  )

  (func $add (param $x i32) (param $y i32) (result i32) (i32.add (local.get $x) (local.get $y)))
  (func $sub (param $x i32) (param $y i32) (result i32) (i32.sub (local.get $x) (local.get $y)))
  (func $mul (param $x i32) (param $y i32) (result i32) (i32.mul (local.get $x) (local.get $y)))
  (func $div_s (param $x i32) (param $y i32) (result i32) (i32.div_s (local.get $x) (local.get $y)))
  (func $div_u (param $x i32) (param $y i32) (result i32) (i32.div_u (local.get $x) (local.get $y)))
  (func $rem_s (param $x i32) (param $y i32) (result i32) (i32.rem_s (local.get $x) (local.get $y)))
  (func $rem_u (param $x i32) (param $y i32) (result i32) (i32.rem_u (local.get $x) (local.get $y)))
  (func $and (param $x i32) (param $y i32) (result i32) (i32.and (local.get $x) (local.get $y)))
  (func $or (param $x i32) (param $y i32) (result i32) (i32.or (local.get $x) (local.get $y)))
  (func $xor (param $x i32) (param $y i32) (result i32) (i32.xor (local.get $x) (local.get $y)))
  (func $shl (param $x i32) (param $y i32) (result i32) (i32.shl (local.get $x) (local.get $y)))
  (func $shr_s (param $x i32) (param $y i32) (result i32) (i32.shr_s (local.get $x) (local.get $y)))
  (func $shr_u (param $x i32) (param $y i32) (result i32) (i32.shr_u (local.get $x) (local.get $y)))
  (func $rotl (param $x i32) (param $y i32) (result i32) (i32.rotl (local.get $x) (local.get $y)))
  (func $rotr (param $x i32) (param $y i32) (result i32) (i32.rotr (local.get $x) (local.get $y)))
  (func $clz (param $x i32) (result i32) (i32.clz (local.get $x)))
  (func $ctz (param $x i32) (result i32) (i32.ctz (local.get $x)))
  (func $popcnt (param $x i32) (result i32) (i32.popcnt (local.get $x)))
  (func $extend8_s (param $x i32) (result i32) (i32.extend8_s (local.get $x)))
  (func $extend16_s (param $x i32) (result i32) (i32.extend16_s (local.get $x)))
  (func $eqz (param $x i32) (result i32) (i32.eqz (local.get $x)))
  (func $eq (param $x i32) (param $y i32) (result i32) (i32.eq (local.get $x) (local.get $y)))
  (func $ne (param $x i32) (param $y i32) (result i32) (i32.ne (local.get $x) (local.get $y)))
  (func $lt_s (param $x i32) (param $y i32) (result i32) (i32.lt_s (local.get $x) (local.get $y)))
  (func $lt_u (param $x i32) (param $y i32) (result i32) (i32.lt_u (local.get $x) (local.get $y)))
  (func $le_s (param $x i32) (param $y i32) (result i32) (i32.le_s (local.get $x) (local.get $y)))
  (func $le_u (param $x i32) (param $y i32) (result i32) (i32.le_u (local.get $x) (local.get $y)))
  (func $gt_s (param $x i32) (param $y i32) (result i32) (i32.gt_s (local.get $x) (local.get $y)))
  (func $gt_u (param $x i32) (param $y i32) (result i32) (i32.gt_u (local.get $x) (local.get $y)))
  (func $ge_s (param $x i32) (param $y i32) (result i32) (i32.ge_s (local.get $x) (local.get $y)))
  (func $ge_u (param $x i32) (param $y i32) (result i32) (i32.ge_u (local.get $x) (local.get $y)))

  (func (export "_start")
    (call $assert_test_i32 (call $add (i32.const 1) (i32.const 1)) (i32.const 2))
    (call $assert_test_i32 (call $add (i32.const 1) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $add (i32.const -1) (i32.const -1)) (i32.const -2))
    (call $assert_test_i32 (call $add (i32.const -1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $add (i32.const 0x7fffffff) (i32.const 1)) (i32.const 0x80000000))
    (call $assert_test_i32 (call $add (i32.const 0x80000000) (i32.const -1)) (i32.const 0x7fffffff))
    (call $assert_test_i32 (call $add (i32.const 0x80000000) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $add (i32.const 0x3fffffff) (i32.const 1)) (i32.const 0x40000000))

    (call $assert_test_i32 (call $sub (i32.const 1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $sub (i32.const 1) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $sub (i32.const -1) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $sub (i32.const 0x7fffffff) (i32.const -1)) (i32.const 0x80000000))
    (call $assert_test_i32 (call $sub (i32.const 0x80000000) (i32.const 1)) (i32.const 0x7fffffff))
    (call $assert_test_i32 (call $sub (i32.const 0x80000000) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $sub (i32.const 0x3fffffff) (i32.const -1)) (i32.const 0x40000000))

    (call $assert_test_i32 (call $mul (i32.const 1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $mul (i32.const 1) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $mul (i32.const -1) (i32.const -1)) (i32.const 1))
    (call $assert_test_i32 (call $mul (i32.const 0x10000000) (i32.const 4096)) (i32.const 0))
    (call $assert_test_i32 (call $mul (i32.const 0x80000000) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $mul (i32.const 0x80000000) (i32.const -1)) (i32.const 0x80000000))
    (call $assert_test_i32 (call $mul (i32.const 0x7fffffff) (i32.const -1)) (i32.const 0x80000001))
    (call $assert_test_i32 (call $mul (i32.const 0x01234567) (i32.const 0x76543210)) (i32.const 0x358e7470))
    (call $assert_test_i32 (call $mul (i32.const 0x7fffffff) (i32.const 0x7fffffff)) (i32.const 1))

    ;; (assert_trap (invoke "div_s" (i32.const 1) (i32.const 0)) "integer divide by zero")
    ;; (assert_trap (invoke "div_s" (i32.const 0) (i32.const 0)) "integer divide by zero")
    ;; (assert_trap (invoke "div_s" (i32.const 0x80000000) (i32.const -1)) "integer overflow")
    ;; (assert_trap (invoke "div_s" (i32.const 0x80000000) (i32.const 0)) "integer divide by zero")
    (call $assert_test_i32 (call $div_s (i32.const 1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $div_s (i32.const 0) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $div_s (i32.const 0) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $div_s (i32.const -1) (i32.const -1)) (i32.const 1))
    (call $assert_test_i32 (call $div_s (i32.const 0x80000000) (i32.const 2)) (i32.const 0xc0000000))
    (call $assert_test_i32 (call $div_s (i32.const 0x80000001) (i32.const 1000)) (i32.const 0xffdf3b65))
    (call $assert_test_i32 (call $div_s (i32.const 5) (i32.const 2)) (i32.const 2))
    (call $assert_test_i32 (call $div_s (i32.const -5) (i32.const 2)) (i32.const -2))
    (call $assert_test_i32 (call $div_s (i32.const 5) (i32.const -2)) (i32.const -2))
    (call $assert_test_i32 (call $div_s (i32.const -5) (i32.const -2)) (i32.const 2))
    (call $assert_test_i32 (call $div_s (i32.const 7) (i32.const 3)) (i32.const 2))
    (call $assert_test_i32 (call $div_s (i32.const -7) (i32.const 3)) (i32.const -2))
    (call $assert_test_i32 (call $div_s (i32.const 7) (i32.const -3)) (i32.const -2))
    (call $assert_test_i32 (call $div_s (i32.const -7) (i32.const -3)) (i32.const 2))
    (call $assert_test_i32 (call $div_s (i32.const 11) (i32.const 5)) (i32.const 2))
    (call $assert_test_i32 (call $div_s (i32.const 17) (i32.const 7)) (i32.const 2))

    ;; (assert_trap (invoke "div_u" (i32.const 1) (i32.const 0)) "integer divide by zero")
    ;; (assert_trap (invoke "div_u" (i32.const 0) (i32.const 0)) "integer divide by zero")
    (call $assert_test_i32 (call $div_u (i32.const 1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $div_u (i32.const 0) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $div_u (i32.const -1) (i32.const -1)) (i32.const 1))
    (call $assert_test_i32 (call $div_u (i32.const 0x80000000) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $div_u (i32.const 0x80000000) (i32.const 2)) (i32.const 0x40000000))
    (call $assert_test_i32 (call $div_u (i32.const 0x8ff00ff0) (i32.const 0x10001)) (i32.const 0x8fef))
    (call $assert_test_i32 (call $div_u (i32.const 0x80000001) (i32.const 1000)) (i32.const 0x20c49b))
    (call $assert_test_i32 (call $div_u (i32.const 5) (i32.const 2)) (i32.const 2))
    (call $assert_test_i32 (call $div_u (i32.const -5) (i32.const 2)) (i32.const 0x7ffffffd))
    (call $assert_test_i32 (call $div_u (i32.const 5) (i32.const -2)) (i32.const 0))
    (call $assert_test_i32 (call $div_u (i32.const -5) (i32.const -2)) (i32.const 0))
    (call $assert_test_i32 (call $div_u (i32.const 7) (i32.const 3)) (i32.const 2))
    (call $assert_test_i32 (call $div_u (i32.const 11) (i32.const 5)) (i32.const 2))
    (call $assert_test_i32 (call $div_u (i32.const 17) (i32.const 7)) (i32.const 2))

    ;; (assert_trap (invoke "rem_s" (i32.const 1) (i32.const 0)) "integer divide by zero")
    ;; (assert_trap (invoke "rem_s" (i32.const 0) (i32.const 0)) "integer divide by zero")
    (call $assert_test_i32 (call $rem_s (i32.const 0x7fffffff) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $rem_s (i32.const 1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $rem_s (i32.const 0) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $rem_s (i32.const 0) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $rem_s (i32.const -1) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $rem_s (i32.const 0x80000000) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $rem_s (i32.const 0x80000000) (i32.const 2)) (i32.const 0))
    (call $assert_test_i32 (call $rem_s (i32.const 0x80000001) (i32.const 1000)) (i32.const -647))
    (call $assert_test_i32 (call $rem_s (i32.const 5) (i32.const 2)) (i32.const 1))
    (call $assert_test_i32 (call $rem_s (i32.const -5) (i32.const 2)) (i32.const -1))
    (call $assert_test_i32 (call $rem_s (i32.const 5) (i32.const -2)) (i32.const 1))
    (call $assert_test_i32 (call $rem_s (i32.const -5) (i32.const -2)) (i32.const -1))
    (call $assert_test_i32 (call $rem_s (i32.const 7) (i32.const 3)) (i32.const 1))
    (call $assert_test_i32 (call $rem_s (i32.const -7) (i32.const 3)) (i32.const -1))
    (call $assert_test_i32 (call $rem_s (i32.const 7) (i32.const -3)) (i32.const 1))
    (call $assert_test_i32 (call $rem_s (i32.const -7) (i32.const -3)) (i32.const -1))
    (call $assert_test_i32 (call $rem_s (i32.const 11) (i32.const 5)) (i32.const 1))
    (call $assert_test_i32 (call $rem_s (i32.const 17) (i32.const 7)) (i32.const 3))

    ;; (assert_trap (invoke "rem_u" (i32.const 1) (i32.const 0)) "integer divide by zero")
    ;; (assert_trap (invoke "rem_u" (i32.const 0) (i32.const 0)) "integer divide by zero")
    (call $assert_test_i32 (call $rem_u (i32.const 1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $rem_u (i32.const 0) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $rem_u (i32.const -1) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $rem_u (i32.const 0x80000000) (i32.const -1)) (i32.const 0x80000000))
    (call $assert_test_i32 (call $rem_u (i32.const 0x80000000) (i32.const 2)) (i32.const 0))
    (call $assert_test_i32 (call $rem_u (i32.const 0x8ff00ff0) (i32.const 0x10001)) (i32.const 0x8001))
    (call $assert_test_i32 (call $rem_u (i32.const 0x80000001) (i32.const 1000)) (i32.const 649))
    (call $assert_test_i32 (call $rem_u (i32.const 5) (i32.const 2)) (i32.const 1))
    (call $assert_test_i32 (call $rem_u (i32.const -5) (i32.const 2)) (i32.const 1))
    (call $assert_test_i32 (call $rem_u (i32.const 5) (i32.const -2)) (i32.const 5))
    (call $assert_test_i32 (call $rem_u (i32.const -5) (i32.const -2)) (i32.const -5))
    (call $assert_test_i32 (call $rem_u (i32.const 7) (i32.const 3)) (i32.const 1))
    (call $assert_test_i32 (call $rem_u (i32.const 11) (i32.const 5)) (i32.const 1))
    (call $assert_test_i32 (call $rem_u (i32.const 17) (i32.const 7)) (i32.const 3))

    (call $assert_test_i32 (call $and (i32.const 1) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $and (i32.const 0) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $and (i32.const 1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $and (i32.const 0) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $and (i32.const 0x7fffffff) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $and (i32.const 0x7fffffff) (i32.const -1)) (i32.const 0x7fffffff))
    (call $assert_test_i32 (call $and (i32.const 0xf0f0ffff) (i32.const 0xfffff0f0)) (i32.const 0xf0f0f0f0))
    (call $assert_test_i32 (call $and (i32.const 0xffffffff) (i32.const 0xffffffff)) (i32.const 0xffffffff))

    (call $assert_test_i32 (call $or (i32.const 1) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $or (i32.const 0) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $or (i32.const 1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $or (i32.const 0) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $or (i32.const 0x7fffffff) (i32.const 0x80000000)) (i32.const -1))
    (call $assert_test_i32 (call $or (i32.const 0x80000000) (i32.const 0)) (i32.const 0x80000000))
    (call $assert_test_i32 (call $or (i32.const 0xf0f0ffff) (i32.const 0xfffff0f0)) (i32.const 0xffffffff))
    (call $assert_test_i32 (call $or (i32.const 0xffffffff) (i32.const 0xffffffff)) (i32.const 0xffffffff))

    (call $assert_test_i32 (call $xor (i32.const 1) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $xor (i32.const 0) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $xor (i32.const 1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $xor (i32.const 0) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $xor (i32.const 0x7fffffff) (i32.const 0x80000000)) (i32.const -1))
    (call $assert_test_i32 (call $xor (i32.const 0x80000000) (i32.const 0)) (i32.const 0x80000000))
    (call $assert_test_i32 (call $xor (i32.const -1) (i32.const 0x80000000)) (i32.const 0x7fffffff))
    (call $assert_test_i32 (call $xor (i32.const -1) (i32.const 0x7fffffff)) (i32.const 0x80000000))
    (call $assert_test_i32 (call $xor (i32.const 0xf0f0ffff) (i32.const 0xfffff0f0)) (i32.const 0x0f0f0f0f))
    (call $assert_test_i32 (call $xor (i32.const 0xffffffff) (i32.const 0xffffffff)) (i32.const 0))

    (call $assert_test_i32 (call $shl (i32.const 1) (i32.const 1)) (i32.const 2))
    (call $assert_test_i32 (call $shl (i32.const 1) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $shl (i32.const 0x7fffffff) (i32.const 1)) (i32.const 0xfffffffe))
    (call $assert_test_i32 (call $shl (i32.const 0xffffffff) (i32.const 1)) (i32.const 0xfffffffe))
    (call $assert_test_i32 (call $shl (i32.const 0x80000000) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $shl (i32.const 0x40000000) (i32.const 1)) (i32.const 0x80000000))
    (call $assert_test_i32 (call $shl (i32.const 1) (i32.const 31)) (i32.const 0x80000000))
    (call $assert_test_i32 (call $shl (i32.const 1) (i32.const 32)) (i32.const 1))
    (call $assert_test_i32 (call $shl (i32.const 1) (i32.const 33)) (i32.const 2))
    (call $assert_test_i32 (call $shl (i32.const 1) (i32.const -1)) (i32.const 0x80000000))
    (call $assert_test_i32 (call $shl (i32.const 1) (i32.const 0x7fffffff)) (i32.const 0x80000000))

    (call $assert_test_i32 (call $shr_s (i32.const 1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $shr_s (i32.const 1) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $shr_s (i32.const -1) (i32.const 1)) (i32.const -1))
    (call $assert_test_i32 (call $shr_s (i32.const 0x7fffffff) (i32.const 1)) (i32.const 0x3fffffff))
    (call $assert_test_i32 (call $shr_s (i32.const 0x80000000) (i32.const 1)) (i32.const 0xc0000000))
    (call $assert_test_i32 (call $shr_s (i32.const 0x40000000) (i32.const 1)) (i32.const 0x20000000))
    (call $assert_test_i32 (call $shr_s (i32.const 1) (i32.const 32)) (i32.const 1))
    (call $assert_test_i32 (call $shr_s (i32.const 1) (i32.const 33)) (i32.const 0))
    (call $assert_test_i32 (call $shr_s (i32.const 1) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $shr_s (i32.const 1) (i32.const 0x7fffffff)) (i32.const 0))
    (call $assert_test_i32 (call $shr_s (i32.const 1) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $shr_s (i32.const 0x80000000) (i32.const 31)) (i32.const -1))
    (call $assert_test_i32 (call $shr_s (i32.const -1) (i32.const 32)) (i32.const -1))
    (call $assert_test_i32 (call $shr_s (i32.const -1) (i32.const 33)) (i32.const -1))
    (call $assert_test_i32 (call $shr_s (i32.const -1) (i32.const -1)) (i32.const -1))
    (call $assert_test_i32 (call $shr_s (i32.const -1) (i32.const 0x7fffffff)) (i32.const -1))
    (call $assert_test_i32 (call $shr_s (i32.const -1) (i32.const 0x80000000)) (i32.const -1))

    (call $assert_test_i32 (call $shr_u (i32.const 1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $shr_u (i32.const 1) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $shr_u (i32.const -1) (i32.const 1)) (i32.const 0x7fffffff))
    (call $assert_test_i32 (call $shr_u (i32.const 0x7fffffff) (i32.const 1)) (i32.const 0x3fffffff))
    (call $assert_test_i32 (call $shr_u (i32.const 0x80000000) (i32.const 1)) (i32.const 0x40000000))
    (call $assert_test_i32 (call $shr_u (i32.const 0x40000000) (i32.const 1)) (i32.const 0x20000000))
    (call $assert_test_i32 (call $shr_u (i32.const 1) (i32.const 32)) (i32.const 1))
    (call $assert_test_i32 (call $shr_u (i32.const 1) (i32.const 33)) (i32.const 0))
    (call $assert_test_i32 (call $shr_u (i32.const 1) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $shr_u (i32.const 1) (i32.const 0x7fffffff)) (i32.const 0))
    (call $assert_test_i32 (call $shr_u (i32.const 1) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $shr_u (i32.const 0x80000000) (i32.const 31)) (i32.const 1))
    (call $assert_test_i32 (call $shr_u (i32.const -1) (i32.const 32)) (i32.const -1))
    (call $assert_test_i32 (call $shr_u (i32.const -1) (i32.const 33)) (i32.const 0x7fffffff))
    (call $assert_test_i32 (call $shr_u (i32.const -1) (i32.const -1)) (i32.const 1))
    (call $assert_test_i32 (call $shr_u (i32.const -1) (i32.const 0x7fffffff)) (i32.const 1))
    (call $assert_test_i32 (call $shr_u (i32.const -1) (i32.const 0x80000000)) (i32.const -1))

    (call $assert_test_i32 (call $rotl (i32.const 1) (i32.const 1)) (i32.const 2))
    (call $assert_test_i32 (call $rotl (i32.const 1) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $rotl (i32.const -1) (i32.const 1)) (i32.const -1))
    (call $assert_test_i32 (call $rotl (i32.const 1) (i32.const 32)) (i32.const 1))
    (call $assert_test_i32 (call $rotl (i32.const 0xabcd9876) (i32.const 1)) (i32.const 0x579b30ed))
    (call $assert_test_i32 (call $rotl (i32.const 0xfe00dc00) (i32.const 4)) (i32.const 0xe00dc00f))
    (call $assert_test_i32 (call $rotl (i32.const 0xb0c1d2e3) (i32.const 5)) (i32.const 0x183a5c76))
    (call $assert_test_i32 (call $rotl (i32.const 0x00008000) (i32.const 37)) (i32.const 0x00100000))
    (call $assert_test_i32 (call $rotl (i32.const 0xb0c1d2e3) (i32.const 0xff05)) (i32.const 0x183a5c76))
    (call $assert_test_i32 (call $rotl (i32.const 0x769abcdf) (i32.const 0xffffffed)) (i32.const 0x579beed3))
    (call $assert_test_i32 (call $rotl (i32.const 0x769abcdf) (i32.const 0x8000000d)) (i32.const 0x579beed3))
    (call $assert_test_i32 (call $rotl (i32.const 1) (i32.const 31)) (i32.const 0x80000000))
    (call $assert_test_i32 (call $rotl (i32.const 0x80000000) (i32.const 1)) (i32.const 1))

    (call $assert_test_i32 (call $rotr (i32.const 1) (i32.const 1)) (i32.const 0x80000000))
    (call $assert_test_i32 (call $rotr (i32.const 1) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $rotr (i32.const -1) (i32.const 1)) (i32.const -1))
    (call $assert_test_i32 (call $rotr (i32.const 1) (i32.const 32)) (i32.const 1))
    (call $assert_test_i32 (call $rotr (i32.const 0xff00cc00) (i32.const 1)) (i32.const 0x7f806600))
    (call $assert_test_i32 (call $rotr (i32.const 0x00080000) (i32.const 4)) (i32.const 0x00008000))
    (call $assert_test_i32 (call $rotr (i32.const 0xb0c1d2e3) (i32.const 5)) (i32.const 0x1d860e97))
    (call $assert_test_i32 (call $rotr (i32.const 0x00008000) (i32.const 37)) (i32.const 0x00000400))
    (call $assert_test_i32 (call $rotr (i32.const 0xb0c1d2e3) (i32.const 0xff05)) (i32.const 0x1d860e97))
    (call $assert_test_i32 (call $rotr (i32.const 0x769abcdf) (i32.const 0xffffffed)) (i32.const 0xe6fbb4d5))
    (call $assert_test_i32 (call $rotr (i32.const 0x769abcdf) (i32.const 0x8000000d)) (i32.const 0xe6fbb4d5))
    (call $assert_test_i32 (call $rotr (i32.const 1) (i32.const 31)) (i32.const 2))
    (call $assert_test_i32 (call $rotr (i32.const 0x80000000) (i32.const 31)) (i32.const 1))

    (call $assert_test_i32 (call $clz (i32.const 0xffffffff)) (i32.const 0))
    (call $assert_test_i32 (call $clz (i32.const 0)) (i32.const 32))
    (call $assert_test_i32 (call $clz (i32.const 0x00008000)) (i32.const 16))
    (call $assert_test_i32 (call $clz (i32.const 0xff)) (i32.const 24))
    (call $assert_test_i32 (call $clz (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $clz (i32.const 1)) (i32.const 31))
    (call $assert_test_i32 (call $clz (i32.const 2)) (i32.const 30))
    (call $assert_test_i32 (call $clz (i32.const 0x7fffffff)) (i32.const 1))

    (call $assert_test_i32 (call $ctz (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $ctz (i32.const 0)) (i32.const 32))
    (call $assert_test_i32 (call $ctz (i32.const 0x00008000)) (i32.const 15))
    (call $assert_test_i32 (call $ctz (i32.const 0x00010000)) (i32.const 16))
    (call $assert_test_i32 (call $ctz (i32.const 0x80000000)) (i32.const 31))
    (call $assert_test_i32 (call $ctz (i32.const 0x7fffffff)) (i32.const 0))

    (call $assert_test_i32 (call $popcnt (i32.const -1)) (i32.const 32))
    (call $assert_test_i32 (call $popcnt (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $popcnt (i32.const 0x00008000)) (i32.const 1))
    (call $assert_test_i32 (call $popcnt (i32.const 0x80008000)) (i32.const 2))
    (call $assert_test_i32 (call $popcnt (i32.const 0x7fffffff)) (i32.const 31))
    (call $assert_test_i32 (call $popcnt (i32.const 0xAAAAAAAA)) (i32.const 16))
    (call $assert_test_i32 (call $popcnt (i32.const 0x55555555)) (i32.const 16))
    (call $assert_test_i32 (call $popcnt (i32.const 0xDEADBEEF)) (i32.const 24))

    (call $assert_test_i32 (call $extend8_s (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $extend8_s (i32.const 0x7f)) (i32.const 127))
    (call $assert_test_i32 (call $extend8_s (i32.const 0x80)) (i32.const -128))
    (call $assert_test_i32 (call $extend8_s (i32.const 0xff)) (i32.const -1))
    (call $assert_test_i32 (call $extend8_s (i32.const 0x012345_00)) (i32.const 0))
    (call $assert_test_i32 (call $extend8_s (i32.const 0xfedcba_80)) (i32.const -0x80))
    (call $assert_test_i32 (call $extend8_s (i32.const -1)) (i32.const -1))

    (call $assert_test_i32 (call $extend16_s (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $extend16_s (i32.const 0x7fff)) (i32.const 32767))
    (call $assert_test_i32 (call $extend16_s (i32.const 0x8000)) (i32.const -32768))
    (call $assert_test_i32 (call $extend16_s (i32.const 0xffff)) (i32.const -1))
    (call $assert_test_i32 (call $extend16_s (i32.const 0x0123_0000)) (i32.const 0))
    (call $assert_test_i32 (call $extend16_s (i32.const 0xfedc_8000)) (i32.const -0x8000))
    (call $assert_test_i32 (call $extend16_s (i32.const -1)) (i32.const -1))

    (call $assert_test_i32 (call $eqz (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $eqz (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $eqz (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $eqz (i32.const 0x7fffffff)) (i32.const 0))
    (call $assert_test_i32 (call $eqz (i32.const 0xffffffff)) (i32.const 0))

    (call $assert_test_i32 (call $eq (i32.const 0) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $eq (i32.const 1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $eq (i32.const -1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $eq (i32.const 0x80000000) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $eq (i32.const 0x7fffffff) (i32.const 0x7fffffff)) (i32.const 1))
    (call $assert_test_i32 (call $eq (i32.const -1) (i32.const -1)) (i32.const 1))
    (call $assert_test_i32 (call $eq (i32.const 1) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $eq (i32.const 0) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $eq (i32.const 0x80000000) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $eq (i32.const 0) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $eq (i32.const 0x80000000) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $eq (i32.const -1) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $eq (i32.const 0x80000000) (i32.const 0x7fffffff)) (i32.const 0))
    (call $assert_test_i32 (call $eq (i32.const 0x7fffffff) (i32.const 0x80000000)) (i32.const 0))

    (call $assert_test_i32 (call $ne (i32.const 0) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $ne (i32.const 1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $ne (i32.const -1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $ne (i32.const 0x80000000) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $ne (i32.const 0x7fffffff) (i32.const 0x7fffffff)) (i32.const 0))
    (call $assert_test_i32 (call $ne (i32.const -1) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $ne (i32.const 1) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $ne (i32.const 0) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $ne (i32.const 0x80000000) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $ne (i32.const 0) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $ne (i32.const 0x80000000) (i32.const -1)) (i32.const 1))
    (call $assert_test_i32 (call $ne (i32.const -1) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $ne (i32.const 0x80000000) (i32.const 0x7fffffff)) (i32.const 1))
    (call $assert_test_i32 (call $ne (i32.const 0x7fffffff) (i32.const 0x80000000)) (i32.const 1))

    (call $assert_test_i32 (call $lt_s (i32.const 0) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $lt_s (i32.const 1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $lt_s (i32.const -1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $lt_s (i32.const 0x80000000) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $lt_s (i32.const 0x7fffffff) (i32.const 0x7fffffff)) (i32.const 0))
    (call $assert_test_i32 (call $lt_s (i32.const -1) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $lt_s (i32.const 1) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $lt_s (i32.const 0) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $lt_s (i32.const 0x80000000) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $lt_s (i32.const 0) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $lt_s (i32.const 0x80000000) (i32.const -1)) (i32.const 1))
    (call $assert_test_i32 (call $lt_s (i32.const -1) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $lt_s (i32.const 0x80000000) (i32.const 0x7fffffff)) (i32.const 1))
    (call $assert_test_i32 (call $lt_s (i32.const 0x7fffffff) (i32.const 0x80000000)) (i32.const 0))

    (call $assert_test_i32 (call $lt_u (i32.const 0) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $lt_u (i32.const 1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $lt_u (i32.const -1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $lt_u (i32.const 0x80000000) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $lt_u (i32.const 0x7fffffff) (i32.const 0x7fffffff)) (i32.const 0))
    (call $assert_test_i32 (call $lt_u (i32.const -1) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $lt_u (i32.const 1) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $lt_u (i32.const 0) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $lt_u (i32.const 0x80000000) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $lt_u (i32.const 0) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $lt_u (i32.const 0x80000000) (i32.const -1)) (i32.const 1))
    (call $assert_test_i32 (call $lt_u (i32.const -1) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $lt_u (i32.const 0x80000000) (i32.const 0x7fffffff)) (i32.const 0))
    (call $assert_test_i32 (call $lt_u (i32.const 0x7fffffff) (i32.const 0x80000000)) (i32.const 1))

    (call $assert_test_i32 (call $le_s (i32.const 0) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $le_s (i32.const 1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $le_s (i32.const -1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $le_s (i32.const 0x80000000) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $le_s (i32.const 0x7fffffff) (i32.const 0x7fffffff)) (i32.const 1))
    (call $assert_test_i32 (call $le_s (i32.const -1) (i32.const -1)) (i32.const 1))
    (call $assert_test_i32 (call $le_s (i32.const 1) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $le_s (i32.const 0) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $le_s (i32.const 0x80000000) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $le_s (i32.const 0) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $le_s (i32.const 0x80000000) (i32.const -1)) (i32.const 1))
    (call $assert_test_i32 (call $le_s (i32.const -1) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $le_s (i32.const 0x80000000) (i32.const 0x7fffffff)) (i32.const 1))
    (call $assert_test_i32 (call $le_s (i32.const 0x7fffffff) (i32.const 0x80000000)) (i32.const 0))

    (call $assert_test_i32 (call $le_u (i32.const 0) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $le_u (i32.const 1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $le_u (i32.const -1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $le_u (i32.const 0x80000000) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $le_u (i32.const 0x7fffffff) (i32.const 0x7fffffff)) (i32.const 1))
    (call $assert_test_i32 (call $le_u (i32.const -1) (i32.const -1)) (i32.const 1))
    (call $assert_test_i32 (call $le_u (i32.const 1) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $le_u (i32.const 0) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $le_u (i32.const 0x80000000) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $le_u (i32.const 0) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $le_u (i32.const 0x80000000) (i32.const -1)) (i32.const 1))
    (call $assert_test_i32 (call $le_u (i32.const -1) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $le_u (i32.const 0x80000000) (i32.const 0x7fffffff)) (i32.const 0))
    (call $assert_test_i32 (call $le_u (i32.const 0x7fffffff) (i32.const 0x80000000)) (i32.const 1))

    (call $assert_test_i32 (call $gt_s (i32.const 0) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $gt_s (i32.const 1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $gt_s (i32.const -1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $gt_s (i32.const 0x80000000) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $gt_s (i32.const 0x7fffffff) (i32.const 0x7fffffff)) (i32.const 0))
    (call $assert_test_i32 (call $gt_s (i32.const -1) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $gt_s (i32.const 1) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $gt_s (i32.const 0) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $gt_s (i32.const 0x80000000) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $gt_s (i32.const 0) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $gt_s (i32.const 0x80000000) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $gt_s (i32.const -1) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $gt_s (i32.const 0x80000000) (i32.const 0x7fffffff)) (i32.const 0))
    (call $assert_test_i32 (call $gt_s (i32.const 0x7fffffff) (i32.const 0x80000000)) (i32.const 1))

    (call $assert_test_i32 (call $gt_u (i32.const 0) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $gt_u (i32.const 1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $gt_u (i32.const -1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $gt_u (i32.const 0x80000000) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $gt_u (i32.const 0x7fffffff) (i32.const 0x7fffffff)) (i32.const 0))
    (call $assert_test_i32 (call $gt_u (i32.const -1) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $gt_u (i32.const 1) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $gt_u (i32.const 0) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $gt_u (i32.const 0x80000000) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $gt_u (i32.const 0) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $gt_u (i32.const 0x80000000) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $gt_u (i32.const -1) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $gt_u (i32.const 0x80000000) (i32.const 0x7fffffff)) (i32.const 1))
    (call $assert_test_i32 (call $gt_u (i32.const 0x7fffffff) (i32.const 0x80000000)) (i32.const 0))

    (call $assert_test_i32 (call $ge_s (i32.const 0) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $ge_s (i32.const 1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $ge_s (i32.const -1) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $ge_s (i32.const 0x80000000) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $ge_s (i32.const 0x7fffffff) (i32.const 0x7fffffff)) (i32.const 1))
    (call $assert_test_i32 (call $ge_s (i32.const -1) (i32.const -1)) (i32.const 1))
    (call $assert_test_i32 (call $ge_s (i32.const 1) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $ge_s (i32.const 0) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $ge_s (i32.const 0x80000000) (i32.const 0)) (i32.const 0))
    (call $assert_test_i32 (call $ge_s (i32.const 0) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $ge_s (i32.const 0x80000000) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $ge_s (i32.const -1) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $ge_s (i32.const 0x80000000) (i32.const 0x7fffffff)) (i32.const 0))
    (call $assert_test_i32 (call $ge_s (i32.const 0x7fffffff) (i32.const 0x80000000)) (i32.const 1))

    (call $assert_test_i32 (call $ge_u (i32.const 0) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $ge_u (i32.const 1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $ge_u (i32.const -1) (i32.const 1)) (i32.const 1))
    (call $assert_test_i32 (call $ge_u (i32.const 0x80000000) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $ge_u (i32.const 0x7fffffff) (i32.const 0x7fffffff)) (i32.const 1))
    (call $assert_test_i32 (call $ge_u (i32.const -1) (i32.const -1)) (i32.const 1))
    (call $assert_test_i32 (call $ge_u (i32.const 1) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $ge_u (i32.const 0) (i32.const 1)) (i32.const 0))
    (call $assert_test_i32 (call $ge_u (i32.const 0x80000000) (i32.const 0)) (i32.const 1))
    (call $assert_test_i32 (call $ge_u (i32.const 0) (i32.const 0x80000000)) (i32.const 0))
    (call $assert_test_i32 (call $ge_u (i32.const 0x80000000) (i32.const -1)) (i32.const 0))
    (call $assert_test_i32 (call $ge_u (i32.const -1) (i32.const 0x80000000)) (i32.const 1))
    (call $assert_test_i32 (call $ge_u (i32.const 0x80000000) (i32.const 0x7fffffff)) (i32.const 1))
    (call $assert_test_i32 (call $ge_u (i32.const 0x7fffffff) (i32.const 0x80000000)) (i32.const 0))
  )
)